{"version":3,"file":"string-ext.js","sourceRoot":"","sources":["../src/string-ext.ts"],"names":[],"mappings":"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","sourcesContent":["class StringExt\n{\n    public static isEmptyOrWhiteSpace(value: string): boolean\n    {\n        return value.trim().length === 0;\n    }\n\n    public static contains(primary: string, sub: string): boolean\n    {\n        return primary.indexOf(sub) !== -1;\n    }\n\n    public static startsWith(primary: string, sub: string): boolean\n    {\n        return primary.indexOf(sub) === 0;\n    }\n\n    public static endsWith(primary: string, sub: string): boolean\n    {\n        let index = primary.lastIndexOf(sub);\n        if (index === -1) return false;\n        return (index + sub.length) === primary.length;\n    }\n\n    public static extractNumbers(value: string): string\n    {\n        return value.replace(/[^0-9]/g, \"\");\n    }\n\n    public static format(formatString: string, ...params: any[]): string\n    {\n        let result = formatString.toString();\n        if (result == null) return null;\n\n        if (params == null || params.length === 0) return result;\n\n        for (let i = 0; i < params.length; i++)\n        {\n            let format = \"{\" + i.toString() + \"}\";\n            while (StringExt.contains(result, format))\n                result = result.replace(format, params[i].toString());\n        }\n\n        return result;\n    }\n    \n    public static replaceAll(primary: string, searchValue: string, replaceValue: string, ignoreCase?: boolean): string\n    {\n        let matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n        let result = primary.replace(matchOperatorsRe, \"\\\\$&\");\n        \n        let searchRe = new RegExp(searchValue, ignoreCase ? \"gi\" : \"g\");\n        \n        return result.replace(searchRe, replaceValue);\n    }\n}\n\n\nObject.defineProperty(String.prototype, \"isEmptyOrWhiteSpace\", {\n    configurable: false,\n    enumerable: false,\n    writable: false,\n    value: function (): boolean\n    {\n        return StringExt.isEmptyOrWhiteSpace(this.toString());\n    }\n});\n\nObject.defineProperty(String.prototype, \"contains\", {\n    configurable: false,\n    enumerable: false,\n    writable: false,\n    value: function (sub: string): boolean\n    {\n        return StringExt.contains(this.toString(), sub);\n    }\n});\n\nObject.defineProperty(String.prototype, \"startsWith\", {\n    configurable: false,\n    enumerable: false,\n    writable: false,\n    value: function (sub: string): boolean\n    {\n        return StringExt.startsWith(this.toString(), sub);\n    }\n});\n\nObject.defineProperty(String.prototype, \"endsWith\", {\n    configurable: false,\n    enumerable: false,\n    writable: false,\n    value: function (sub: string): boolean\n    {\n        return StringExt.endsWith(this.toString(), sub);\n    }\n});\n\nObject.defineProperty(String.prototype, \"extractNumbers\", {\n    configurable: false,\n    enumerable: false,\n    writable: false,\n    value: function (): string\n    {\n        return StringExt.extractNumbers(this.toString());\n    }\n});\n\nObject.defineProperty(String.prototype, \"format\", {\n    configurable: false,\n    enumerable: false,\n    writable: false,\n    value: function (...params: any[]): string\n    {\n        return StringExt.format(this.toString(), ...params);\n    }\n});\n\nObject.defineProperty(String.prototype, \"replaceAll\", {\n    configurable: false,\n    enumerable: false,\n    writable: false,\n    value: function (searchValue: string, replaceValue: string, ignoreCase?: boolean): string\n    {\n        return StringExt.replaceAll(this.toString(), searchValue, replaceValue, ignoreCase);\n    }\n});"]}